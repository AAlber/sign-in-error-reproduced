import Stripe from "stripe";
import { prisma } from "../src/server/db/client";



const NAME = "Test Institution Prod";
const ENVIRONMENT: "prod" | "dev" = "prod"


const productionPriceId = "price_1NH6bUEwHpTUe8W7TvUQfDKg"
const devPriceId = "price_1NFxumEwHpTUe8W7ylkfurKF"
const selectedPriceID = ENVIRONMENT === "prod" ? productionPriceId : devPriceId;
const devCouponId = "u9lyD8PG"
const productionCouponId = "2PIL5bmO"
const selectedCouponId = ENVIRONMENT === "prod" ? productionCouponId : devCouponId;

async function main() {

  const stripe = new Stripe(process.env.STRIPE_SK!, {
    apiVersion: "2022-11-15"
  })


  const institutions = await prisma.institution.findMany();

  const createSubscriptionForInstitution = async (institutionId) => {
    const stripeCustomer = await stripe.customers.create({
      name: NAME,
    })

    console.log(`Created Stripe Customer !`);

    const stripeSubscription = await stripe.subscriptions.create({
      customer: stripeCustomer.id,
      items: [{
        price: selectedPriceID,
        quantity: 10000
      }],
      metadata: {
        institutionId: institutionId,
        isTestInstitution: "true",
      },
      coupon: selectedCouponId,
      cancel_at_period_end: true,
    })

    console.log(`Created Subscription !`);
    await prisma.institutionStripeAccount.upsert({
      where: {
        institutionId: institutionId
      },
      update: {
        institutionId: institutionId,
        customerId: stripeCustomer.id,
        subscriptionId: stripeSubscription.id,
        subscriptionStatus: "active",
      },
      create: {
        institutionId: institutionId,
        customerId: stripeCustomer.id,
        subscriptionId: stripeSubscription.id,
        subscriptionStatus: "active",
      },
    })
  }
  const promises: Promise<any>[] = []

  for (const institution of institutions) {
    promises.push(createSubscriptionForInstitution(institution.id));
  }
  await Promise.all(promises);
  console.log(`Setup trial institution done!`);
}

main().catch((e) => {
  console.error(e);
  process.exit(1);
});
